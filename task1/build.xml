<project name="POS" basedir=".">

	<property name="src.dir" value="${basedir}/src" />
	<property name="dist.dir" value="${basedir}/build" />
	<property name="build.dir" value="${dist.dir}/build" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${dist.dir}/jar" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="res.dir" value="${basedir}/etc/res" />
	<property name="test.dir" value="${basedir}/test"/>
	<property name="build.test.dir" value="${build.dir}/test"/>
	<property name="Main-Class" value="ee.ut.math.tvt.teamDefault.Intro" />

	<property file="${res.dir}/application.properties" />

	<!-- database variables -->
	<property name="data.dir"	value="${basedir}/data"/>
	<property name="db.file"	value="${data.dir}/POSdb"/>
	<property name="db.alias"	value="POS"/>
	<property name="db.url" 	value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"   value="${lib.dir}/hibernate"/>


	<path id="build.classpath">
		<fileset dir="${lib.dir}" includes="*.jar" />
		<fileset dir="${lib.hibernate.dir}" includes="*.jar" />
	</path>

	<!--Inspired from lab3-demo-->
	<path id="run.classpath">
		<pathelement location="${classes.dir}" />
		<fileset dir="${lib.dir}" includes="*.jar" />
		<fileset dir="${lib.hibernate.dir}" includes="*.jar" />
		<pathelement location="${basedir}/conf" />
		<dirset dir="${res.dir}" />
		<pathelement path="${res.dir}" />
	</path>

	<path id="db.classpath">
		<pathelement location="${classes.dir}"/>
		<!-- configuration -->
		<pathelement location="${res.dir}"/>
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>

		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="test.classpath">
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
		    <pathelement path="${classes.dir}/" />
			<pathelement path="${build.test.dir}/" />
		</path>
	
	<target name="clean">
		<delete dir="${dist.dir}" />
	</target>

	<target name="build" depends="clean">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${src.dir}"
			destdir="${classes.dir}"
			debug="true"
			debuglevel="lines,vars,source"
			encoding="utf-8"
			compiler="modern"
			target="1.7"
			source="1.7"
			classpathref="build.classpath"
			includeantruntime="false"
		/>
	</target>
	
	<target name="build-tests" depends="build" description="Build the system">
		<mkdir dir="${build.test.dir}"/>
			<javac
	            srcdir="${test.dir}"
	            destdir="${build.test.dir}"
	            debug="true"
	            debuglevel="lines,vars,source"
	            encoding="utf-8"
	            compiler="modern"
	            target="1.7"
	            source="1.7"
	        	classpathref="build.classpath"
				includeantruntime="false"
	        >
				<classpath>
					<pathelement path="${classes.dir}" />
				</classpath>
			</javac>
		</target>

	<target name="dist" depends="build">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${Team.Name}.jar" basedir="${classes.dir}">
			<fileset dir="${res.dir}" includes="*.properties" />
			<zipgroupfileset dir="${lib.dir}" includes="*.jar" />
			<manifest>
				<attribute name="Main-Class" value="${Main-Class}" />
			</manifest>
		</jar>
		<antcall target="revision" />
	</target>

	<target name="revision">
		<propertyfile file="${res.dir}/version.properties">
			<entry key="build.revision.number" value="1" type="int" operation="+" />
		</propertyfile>
		<property file="${res.dir}/version.properties" />
		<propertyfile file="${res.dir}/version.properties">
			<entry key="build.number"
				value="${build.major.number}.${build.minor.number}
				.${build.revision.number}"
			/>
		</propertyfile>
	</target>

	<target name="run" depends="build">
		<java classname="${Main-Class}" classpathref="run.classpath" fork="yes">
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044"/>
		</java>
	</target>

	<target name="jrun">
		<java jar="${jar.dir}/${Team.Name}.jar" fork="true" />
	</target>

	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="${Main-Class}" classpathref="run.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>

	<target name="git_commit">
		<input message="Commit description:"
			addproperty="commit.description"
			defaultvalue=""
		/>
		<exec executable="git" dir="">
			<arg value="add" />
			<arg value="-A" />
		</exec>
		<exec executable="git" dir="">
			<arg value="commit" />
			<arg value="-m" />
			<arg value="${commit.description}" />
		</exec>
		<input message="Username:" addproperty="commit.username" />
		<input message="Password:" addproperty="commit.password" />
		<exec executable="git" dir="">
			<arg value="push" />
			<arg value="https://${commit.username}:
				${commit.password}@github.com/OttMatiisen/Default.git"
			/>
		</exec>
	</target>

	<target name="git_tag">
		<input message="Homework nr:" addproperty="homework.nr" defaultvalue="" />
		<exec executable="git" dir="">
			<arg value="tag" />
			<arg value="-a" />
			<arg value="homework_${homework.nr}" />
			<arg value="-m" />
			<arg value="&quot;Homework ${homework.nr}&quot;"/>
		</exec>
		<input message="Username:" addproperty="commit.username" defaultvalue="" />
		<input message="Password:" addproperty="commit.password" defaultvalue="" />
		<exec executable="git" dir="">
			<arg value="push" />
			<arg value="--tags" />
			<arg value="https://${commit.username}:
				${commit.password}@github.com/OttMatiisen/Default.git"
			/>
		</exec>
	</target>

	<target name="dbmanager" description="Start the HSQLDB manager">
		<java
	            classname="org.hsqldb.util.DatabaseManagerSwing"
	            classpathref="db.classpath"
	            fork="yes"
	        >
			<arg line="--user sa --url ${db.url}" />
		</java>
	</target>

	<target name="startdb" description="Start the HSQLDB with the default params">
		<java
	            classname="org.hsqldb.Server"
	            classpathref="db.classpath"
	            fork="yes"
	        >
			<arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" />
		</java>
	</target>

	<target name="stopdb">
		<sql
			    classpathref="run.classpath"
			    driver="org.hsqldb.jdbcDriver"
			    url="jdbc:hsqldb:hsql://localhost/POS"
			    userid="sa" password=""
			    autocommit="true">SHUTDOWN</sql>
		</target>
	
	<target name="test" depends="build-tests" description="Run the template application">

			<junit>
				<classpath refid="test.classpath" />

				<formatter type="brief" usefile="false" />
				<batchtest>
					<fileset dir="${build.test.dir}" includes="**/*.class" />
				</batchtest>
			</junit>


		</target>

	<!-- imported from "mentor-keerleb" POS and tweaked to fit into build -->
	<target name="mostpopularsql">
		<sql
			print="yes"
		    classpathref="run.classpath"
		    driver="org.hsqldb.jdbcDriver"
		    url="jdbc:hsqldb:hsql://localhost/POS"
		    userid="sa" password="">
			SELECT TOP 1 name,SUM(quantity) as total_quantity,ITEMPRICE,SUM(quantity)*ITEMPRICE as total_price
			FROM SOLDITEM
			GROUP BY name,ITEMPRICE
			ORDER BY total_quantity DESC
		</sql>
	</target>
	
	<target name="mostexpensivesql">
		<sql
			print="yes"
		    classpathref="run.classpath"
		    driver="org.hsqldb.jdbcDriver"
		    url="jdbc:hsqldb:hsql://localhost/POS"
		    userid="sa" password="">
			SELECT TOP 1 NAME, PRICE
			FROM STOCKITEM
			ORDER BY PRICE DESC
			
		</sql>
	</target>

</project>